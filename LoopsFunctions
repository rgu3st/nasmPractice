%macro sayhello 0
    ; saving the parameter registers
    push rdi
    push rsi
    push rdx
    
    mov rax, 1
    mov rdi, 1
    mov rsi, msg
    mov rdx, 24
    syscall
    ; All done, restore registry values
    pop rdx
    pop rsi
    pop rdi
%endmacro

func_rjgPrint:
    push rbp
    mov rbp, rsp
    ; saving the parameter registers
    push rdi
    push rsi
    push rdx
    
    ; This macro can act as a function call...
    sayhello
    
    ; print?
    mov rdx, rdi
    mov rsi, rsi
    mov rax, 1
    mov rdi, 1
    syscall
    
    ; All done, restore registry values and ret
    pop rdx
    pop rsi
    pop rdi
    pop rbp
    ret


section .data
    msg db "Yay...a basic for loop!", 0ah
    msg1 db "Again!", 0ah
    
    

section .text
    global _start

_start:
    
    
    mov rcx, 5
hiloop:
    push rcx
    sayhello
    mov rdi, 7
    lea rsi, [rel msg1] 
    call func_rjgPrint
    pop rcx
    dec rcx
    test rcx, rcx
    jnz hiloop
    
    mov rax, 60
    mov rdi, 0
    syscall